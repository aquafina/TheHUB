package hub.nishat.net.model.VO;

import oracle.jbo.AttributeList;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;

import view.nishat.net.Helper.CommonUtil;
import view.nishat.net.Helper.Constants;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 20 10:08:18 PKT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VO_TravellingLeaveRowImpl extends ViewRowImpl {
    @Override
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        setCreatedBy(CommonUtil.getSessionValue(Constants.SESSION_USERID).toString());
        setLastUpdatedBy(CommonUtil.getSessionValue(Constants.SESSION_USERID).toString());
        
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Tid {
            public Object get(VO_TravellingLeaveRowImpl obj) {
                return obj.getTid();
            }

            public void put(VO_TravellingLeaveRowImpl obj, Object value) {
                obj.setTid((Number)value);
            }
        }
        ,
        TDate {
            public Object get(VO_TravellingLeaveRowImpl obj) {
                return obj.getTDate();
            }

            public void put(VO_TravellingLeaveRowImpl obj, Object value) {
                obj.setTDate((Date)value);
            }
        }
        ,
        UserId {
            public Object get(VO_TravellingLeaveRowImpl obj) {
                return obj.getUserId();
            }

            public void put(VO_TravellingLeaveRowImpl obj, Object value) {
                obj.setUserId((Number)value);
            }
        }
        ,
        Comments {
            public Object get(VO_TravellingLeaveRowImpl obj) {
                return obj.getComments();
            }

            public void put(VO_TravellingLeaveRowImpl obj, Object value) {
                obj.setComments((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(VO_TravellingLeaveRowImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(VO_TravellingLeaveRowImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(VO_TravellingLeaveRowImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(VO_TravellingLeaveRowImpl obj, Object value) {
                obj.setLastUpdatedBy((String)value);
            }
        }
        ,
        CreationDate {
            public Object get(VO_TravellingLeaveRowImpl obj) {
                return obj.getCreationDate();
            }

            public void put(VO_TravellingLeaveRowImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(VO_TravellingLeaveRowImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(VO_TravellingLeaveRowImpl obj, Object value) {
                obj.setCreatedBy((String)value);
            }
        }
        ,
        ApprovedFlag {
            public Object get(VO_TravellingLeaveRowImpl obj) {
                return obj.getApprovedFlag();
            }

            public void put(VO_TravellingLeaveRowImpl obj, Object value) {
                obj.setApprovedFlag((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(VO_TravellingLeaveRowImpl object);

        public abstract void put(VO_TravellingLeaveRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int TID = AttributesEnum.Tid.index();
    public static final int TDATE = AttributesEnum.TDate.index();
    public static final int USERID = AttributesEnum.UserId.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int APPROVEDFLAG = AttributesEnum.ApprovedFlag.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VO_TravellingLeaveRowImpl() {
    }

    /**
     * Gets EO_TravellingLeave entity object.
     * @return the EO_TravellingLeave
     */
    public EntityImpl getEO_TravellingLeave() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for TID using the alias name Tid.
     * @return the TID
     */
    public Number getTid() {
        return (Number) getAttributeInternal(TID);
    }

    /**
     * Sets <code>value</code> as attribute value for TID using the alias name Tid.
     * @param value value to set the TID
     */
    public void setTid(Number value) {
        setAttributeInternal(TID, value);
    }

    /**
     * Gets the attribute value for T_DATE using the alias name TDate.
     * @return the T_DATE
     */
    public Date getTDate() {
        return (Date) getAttributeInternal(TDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for T_DATE using the alias name TDate.
     * @param value value to set the T_DATE
     */
    public void setTDate(Date value) {
        setAttributeInternal(TDATE, value);
    }

    /**
     * Gets the attribute value for USER_ID using the alias name UserId.
     * @return the USER_ID
     */
    public Number getUserId() {
        return (Number) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_ID using the alias name UserId.
     * @param value value to set the USER_ID
     */
    public void setUserId(Number value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for COMMENTS using the alias name Comments.
     * @return the COMMENTS
     */
    public String getComments() {
        return (String) getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for COMMENTS using the alias name Comments.
     * @param value value to set the COMMENTS
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @return the LAST_UPDATE_DATE
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATE_DATE using the alias name LastUpdateDate.
     * @param value value to set the LAST_UPDATE_DATE
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @return the LAST_UPDATED_BY
     */
    public String getLastUpdatedBy() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_UPDATED_BY using the alias name LastUpdatedBy.
     * @param value value to set the LAST_UPDATED_BY
     */
    public void setLastUpdatedBy(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CREATION_DATE using the alias name CreationDate.
     * @return the CREATION_DATE
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATION_DATE using the alias name CreationDate.
     * @param value value to set the CREATION_DATE
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CREATED_BY using the alias name CreatedBy.
     * @return the CREATED_BY
     */
    public String getCreatedBy() {
        return (String) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy.
     * @param value value to set the CREATED_BY
     */
    public void setCreatedBy(String value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for APPROVED_FLAG using the alias name ApprovedFlag.
     * @return the APPROVED_FLAG
     */
    public String getApprovedFlag() {
        return (String) getAttributeInternal(APPROVEDFLAG);
    }

    /**
     * Sets <code>value</code> as attribute value for APPROVED_FLAG using the alias name ApprovedFlag.
     * @param value value to set the APPROVED_FLAG
     */
    public void setApprovedFlag(String value) {
        setAttributeInternal(APPROVEDFLAG, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
