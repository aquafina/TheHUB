package hub.nishat.net.model.VO.HR;

import java.math.BigDecimal;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jul 10 12:00:18 PKT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VO_ActiveEmployeesRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PostingFlag {
            public Object get(VO_ActiveEmployeesRowImpl obj) {
                return obj.getPostingFlag();
            }

            public void put(VO_ActiveEmployeesRowImpl obj, Object value) {
                obj.setPostingFlag((String)value);
            }
        }
        ,
        Id {
            public Object get(VO_ActiveEmployeesRowImpl obj) {
                return obj.getId();
            }

            public void put(VO_ActiveEmployeesRowImpl obj, Object value) {
                obj.setId((String)value);
            }
        }
        ,
        ChildPersonId {
            public Object get(VO_ActiveEmployeesRowImpl obj) {
                return obj.getChildPersonId();
            }

            public void put(VO_ActiveEmployeesRowImpl obj, Object value) {
                obj.setChildPersonId((Number)value);
            }
        }
        ,
        FullNameChild {
            public Object get(VO_ActiveEmployeesRowImpl obj) {
                return obj.getFullNameChild();
            }

            public void put(VO_ActiveEmployeesRowImpl obj, Object value) {
                obj.setFullNameChild((String)value);
            }
        }
        ,
        HierarchyName {
            public Object get(VO_ActiveEmployeesRowImpl obj) {
                return obj.getHierarchyName();
            }

            public void put(VO_ActiveEmployeesRowImpl obj, Object value) {
                obj.setHierarchyName((String)value);
            }
        }
        ,
        EmpType {
            public Object get(VO_ActiveEmployeesRowImpl obj) {
                return obj.getEmpType();
            }

            public void put(VO_ActiveEmployeesRowImpl obj, Object value) {
                obj.setEmpType((Number)value);
            }
        }
        ,
        VO_AttendanceHR {
            public Object get(VO_ActiveEmployeesRowImpl obj) {
                return obj.getVO_AttendanceHR();
            }

            public void put(VO_ActiveEmployeesRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DepartmentLov {
            public Object get(VO_ActiveEmployeesRowImpl obj) {
                return obj.getDepartmentLov();
            }

            public void put(VO_ActiveEmployeesRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VO_ConsumedLeaves {
            public Object get(VO_ActiveEmployeesRowImpl obj) {
                return obj.getVO_ConsumedLeaves();
            }

            public void put(VO_ActiveEmployeesRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        VO_ActiveEmployees1 {
            public Object get(VO_ActiveEmployeesRowImpl obj) {
                return obj.getVO_ActiveEmployees1();
            }

            public void put(VO_ActiveEmployeesRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DepartmentLov1 {
            public Object get(VO_ActiveEmployeesRowImpl obj) {
                return obj.getDepartmentLov1();
            }

            public void put(VO_ActiveEmployeesRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(VO_ActiveEmployeesRowImpl object);

        public abstract void put(VO_ActiveEmployeesRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int POSTINGFLAG = AttributesEnum.PostingFlag.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int CHILDPERSONID = AttributesEnum.ChildPersonId.index();
    public static final int FULLNAMECHILD = AttributesEnum.FullNameChild.index();
    public static final int HIERARCHYNAME = AttributesEnum.HierarchyName.index();
    public static final int EMPTYPE = AttributesEnum.EmpType.index();
    public static final int VO_ATTENDANCEHR = AttributesEnum.VO_AttendanceHR.index();
    public static final int DEPARTMENTLOV = AttributesEnum.DepartmentLov.index();
    public static final int VO_CONSUMEDLEAVES = AttributesEnum.VO_ConsumedLeaves.index();
    public static final int VO_ACTIVEEMPLOYEES1 = AttributesEnum.VO_ActiveEmployees1.index();
    public static final int DEPARTMENTLOV1 = AttributesEnum.DepartmentLov1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VO_ActiveEmployeesRowImpl() {
    }

    /**
     * Gets EO_ActiveEmployees entity object.
     * @return the EO_ActiveEmployees
     */
    public EntityImpl getEO_ActiveEmployees() {
        return (EntityImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for the calculated attribute PostingFlag.
     * @return the PostingFlag
     */
    public String getPostingFlag() {
        return (String) getAttributeInternal(POSTINGFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PostingFlag.
     * @param value value to set the  PostingFlag
     */
    public void setPostingFlag(String value) {
        setAttributeInternal(POSTINGFLAG, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Id.
     * @return the Id
     */
    public String getId() {
        return (String) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Id.
     * @param value value to set the  Id
     */
    public void setId(String value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ChildPersonId.
     * @return the ChildPersonId
     */
    public Number getChildPersonId() {
        return (Number) getAttributeInternal(CHILDPERSONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ChildPersonId.
     * @param value value to set the  ChildPersonId
     */
    public void setChildPersonId(Number value) {
        setAttributeInternal(CHILDPERSONID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute FullNameChild.
     * @return the FullNameChild
     */
    public String getFullNameChild() {
        return (String) getAttributeInternal(FULLNAMECHILD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FullNameChild.
     * @param value value to set the  FullNameChild
     */
    public void setFullNameChild(String value) {
        setAttributeInternal(FULLNAMECHILD, value);
    }


    /**
     * Gets the attribute value for the calculated attribute HierarchyName.
     * @return the HierarchyName
     */
    public String getHierarchyName() {
        return (String) getAttributeInternal(HIERARCHYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute HierarchyName.
     * @param value value to set the  HierarchyName
     */
    public void setHierarchyName(String value) {
        setAttributeInternal(HIERARCHYNAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EmpType.
     * @return the EmpType
     */
    public Number getEmpType() {
        return (Number) getAttributeInternal(EMPTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmpType.
     * @param value value to set the  EmpType
     */
    public void setEmpType(Number value) {
        setAttributeInternal(EMPTYPE, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link VO_AttendanceHR.
     */
    public RowIterator getVO_AttendanceHR() {
        return (RowIterator)getAttributeInternal(VO_ATTENDANCEHR);
    }

    /**
     * Gets the associated <code>Row</code> using master-detail link DepartmentLov.
     */
    public Row getDepartmentLov() {
        return (Row)getAttributeInternal(DEPARTMENTLOV);
    }

    /**
     * Sets the master-detail link DepartmentLov between this object and <code>value</code>.
     */
    public void setDepartmentLov(Row value) {
        setAttributeInternal(DEPARTMENTLOV, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link VO_ConsumedLeaves.
     */
    public RowIterator getVO_ConsumedLeaves() {
        return (RowIterator)getAttributeInternal(VO_CONSUMEDLEAVES);
    }

    /**
     * Gets the view accessor <code>RowSet</code> VO_ActiveEmployees1.
     */
    public RowSet getVO_ActiveEmployees1() {
        return (RowSet)getAttributeInternal(VO_ACTIVEEMPLOYEES1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DepartmentLov1.
     */
    public RowSet getDepartmentLov1() {
        return (RowSet)getAttributeInternal(DEPARTMENTLOV1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
