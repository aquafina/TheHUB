package hub.nishat.net.model.VO;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Aug 10 13:03:42 PKT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class VO_ExceptionReqRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ExceptionRequestId {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getExceptionRequestId();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setExceptionRequestId((Number)value);
            }
        }
        ,
        IrregularityId {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getIrregularityId();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setIrregularityId((Number)value);
            }
        }
        ,
        EmpAtdId {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getEmpAtdId();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setEmpAtdId((Number)value);
            }
        }
        ,
        ParentPersonId {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getParentPersonId();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setParentPersonId((Number)value);
            }
        }
        ,
        FullNameChild {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getFullNameChild();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setFullNameChild((String)value);
            }
        }
        ,
        AttendanceDate {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getAttendanceDate();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setAttendanceDate((Date)value);
            }
        }
        ,
        ExceptionRequestDate {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getExceptionRequestDate();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setExceptionRequestDate((Date)value);
            }
        }
        ,
        ExceptionCause {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getExceptionCause();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setExceptionCause((String)value);
            }
        }
        ,
        ExceptionRemarks {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getExceptionRemarks();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setExceptionRemarks((String)value);
            }
        }
        ,
        EmpId {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getEmpId();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setEmpId((Number)value);
            }
        }
        ,
        Approved {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getApproved();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setApproved((String)value);
            }
        }
        ,
        MissingMinutes {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getMissingMinutes();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setMissingMinutes((Number)value);
            }
        }
        ,
        EmpCode {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getEmpCode();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setEmpCode((String)value);
            }
        }
        ,
        Intime {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getIntime();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setIntime((String)value);
            }
        }
        ,
        Outtime {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getOuttime();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setOuttime((String)value);
            }
        }
        ,
        LeaveType {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getLeaveType();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setLeaveType((String)value);
            }
        }
        ,
        LineManagerComments {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getLineManagerComments();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setLineManagerComments((String)value);
            }
        }
        ,
        MissingTime {
            public Object get(VO_ExceptionReqRowImpl obj) {
                return obj.getMissingTime();
            }

            public void put(VO_ExceptionReqRowImpl obj, Object value) {
                obj.setMissingTime((String)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(VO_ExceptionReqRowImpl object);

        public abstract void put(VO_ExceptionReqRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EXCEPTIONREQUESTID = AttributesEnum.ExceptionRequestId.index();
    public static final int IRREGULARITYID = AttributesEnum.IrregularityId.index();
    public static final int EMPATDID = AttributesEnum.EmpAtdId.index();
    public static final int PARENTPERSONID = AttributesEnum.ParentPersonId.index();
    public static final int FULLNAMECHILD = AttributesEnum.FullNameChild.index();
    public static final int ATTENDANCEDATE = AttributesEnum.AttendanceDate.index();
    public static final int EXCEPTIONREQUESTDATE = AttributesEnum.ExceptionRequestDate.index();
    public static final int EXCEPTIONCAUSE = AttributesEnum.ExceptionCause.index();
    public static final int EXCEPTIONREMARKS = AttributesEnum.ExceptionRemarks.index();
    public static final int EMPID = AttributesEnum.EmpId.index();
    public static final int APPROVED = AttributesEnum.Approved.index();
    public static final int MISSINGMINUTES = AttributesEnum.MissingMinutes.index();
    public static final int EMPCODE = AttributesEnum.EmpCode.index();
    public static final int INTIME = AttributesEnum.Intime.index();
    public static final int OUTTIME = AttributesEnum.Outtime.index();
    public static final int LEAVETYPE = AttributesEnum.LeaveType.index();
    public static final int LINEMANAGERCOMMENTS = AttributesEnum.LineManagerComments.index();
    public static final int MISSINGTIME = AttributesEnum.MissingTime.index();

    /**
     * This is the default constructor (do not remove).
     */
    public VO_ExceptionReqRowImpl() {
    }


    /**
     * Gets EO_ExceptionReq entity object.
     * @return the EO_ExceptionReq
     */
    public EntityImpl getEO_ExceptionReq() {
        return (EntityImpl)getEntity(0);
    }


    /**
     * Gets the attribute value for the calculated attribute AttendanceDate.
     * @return the AttendanceDate
     */
    public Date getAttendanceDate() {
        return (Date) getAttributeInternal(ATTENDANCEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute AttendanceDate.
     * @param value value to set the  AttendanceDate
     */
    public void setAttendanceDate(Date value) {
        setAttributeInternal(ATTENDANCEDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExceptionRequestDate.
     * @return the ExceptionRequestDate
     */
    public Date getExceptionRequestDate() {
        return (Date) getAttributeInternal(EXCEPTIONREQUESTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExceptionRequestDate.
     * @param value value to set the  ExceptionRequestDate
     */
    public void setExceptionRequestDate(Date value) {
        setAttributeInternal(EXCEPTIONREQUESTDATE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExceptionCause.
     * @return the ExceptionCause
     */
    public String getExceptionCause() {
        return (String) getAttributeInternal(EXCEPTIONCAUSE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExceptionCause.
     * @param value value to set the  ExceptionCause
     */
    public void setExceptionCause(String value) {
        setAttributeInternal(EXCEPTIONCAUSE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ExceptionRemarks.
     * @return the ExceptionRemarks
     */
    public String getExceptionRemarks() {
        return (String) getAttributeInternal(EXCEPTIONREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ExceptionRemarks.
     * @param value value to set the  ExceptionRemarks
     */
    public void setExceptionRemarks(String value) {
        setAttributeInternal(EXCEPTIONREMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute EmpId.
     * @return the EmpId
     */
    public Number getEmpId() {
        return (Number) getAttributeInternal(EMPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmpId.
     * @param value value to set the  EmpId
     */
    public void setEmpId(Number value) {
        setAttributeInternal(EMPID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Approved.
     * @return the Approved
     */
    public String getApproved() {
        return (String) getAttributeInternal(APPROVED);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Approved.
     * @param value value to set the  Approved
     */
    public void setApproved(String value) {
        setAttributeInternal(APPROVED, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MissingMinutes.
     * @return the MissingMinutes
     */
    public Number getMissingMinutes() {
        return (Number) getAttributeInternal(MISSINGMINUTES);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MissingMinutes.
     * @param value value to set the  MissingMinutes
     */
    public void setMissingMinutes(Number value) {
        setAttributeInternal(MISSINGMINUTES, value);
    }


    /**
     * Gets the attribute value for the calculated attribute EmpCode.
     * @return the EmpCode
     */
    public String getEmpCode() {
        return (String) getAttributeInternal(EMPCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmpCode.
     * @param value value to set the  EmpCode
     */
    public void setEmpCode(String value) {
        setAttributeInternal(EMPCODE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Intime.
     * @return the Intime
     */
    public String getIntime() {
        return (String) getAttributeInternal(INTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Intime.
     * @param value value to set the  Intime
     */
    public void setIntime(String value) {
        setAttributeInternal(INTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Outtime.
     * @return the Outtime
     */
    public String getOuttime() {
        return (String) getAttributeInternal(OUTTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Outtime.
     * @param value value to set the  Outtime
     */
    public void setOuttime(String value) {
        setAttributeInternal(OUTTIME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute LeaveType.
     * @return the LeaveType
     */
    public String getLeaveType() {
        return (String) getAttributeInternal(LEAVETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute LeaveType.
     * @param value value to set the  LeaveType
     */
    public void setLeaveType(String value) {
        setAttributeInternal(LEAVETYPE, value);
    }

    /**
     * Gets the attribute value for IRREGULARITY_ID using the alias name IrregularityId.
     * @return the IRREGULARITY_ID
     */
    public Number getIrregularityId() {
        return (Number) getAttributeInternal(IRREGULARITYID);
    }

    /**
     * Sets <code>value</code> as attribute value for IRREGULARITY_ID using the alias name IrregularityId.
     * @param value value to set the IRREGULARITY_ID
     */
    public void setIrregularityId(Number value) {
        setAttributeInternal(IRREGULARITYID, value);
    }

    /**
     * Gets the attribute value for LINE_MANAGER_COMMENTS using the alias name LineManagerComments.
     * @return the LINE_MANAGER_COMMENTS
     */
    public String getLineManagerComments() {
        return (String) getAttributeInternal(LINEMANAGERCOMMENTS);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_MANAGER_COMMENTS using the alias name LineManagerComments.
     * @param value value to set the LINE_MANAGER_COMMENTS
     */
    public void setLineManagerComments(String value) {
        setAttributeInternal(LINEMANAGERCOMMENTS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute MissingTime.
     * @return the MissingTime
     */
    public String getMissingTime() {
        String time = "0:00";
               if (getMissingMinutes() != null) {
                   int t = getMissingMinutes().intValue();
                         int hours = t / 60; //since both are ints, you get an int
                   int minutes = t % 60;
                   time = hours+":"+minutes;
               }
               return time;
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute MissingTime.
     * @param value value to set the  MissingTime
     */
    public void setMissingTime(String value) {
        setAttributeInternal(MISSINGTIME, value);
    }

    /**
     * Gets the attribute value for EXCEPTION_REQUEST_ID using the alias name ExceptionRequestId.
     * @return the EXCEPTION_REQUEST_ID
     */
    public Number getExceptionRequestId() {
        return (Number) getAttributeInternal(EXCEPTIONREQUESTID);
    }

    /**
     * Sets <code>value</code> as attribute value for EXCEPTION_REQUEST_ID using the alias name ExceptionRequestId.
     * @param value value to set the EXCEPTION_REQUEST_ID
     */
    public void setExceptionRequestId(Number value) {
        setAttributeInternal(EXCEPTIONREQUESTID, value);
    }


    /**
     * Gets the attribute value for the calculated attribute EmpAtdId.
     * @return the EmpAtdId
     */
    public Number getEmpAtdId() {
        return (Number) getAttributeInternal(EMPATDID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute EmpAtdId.
     * @param value value to set the  EmpAtdId
     */
    public void setEmpAtdId(Number value) {
        setAttributeInternal(EMPATDID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute ParentPersonId.
     * @return the ParentPersonId
     */
    public Number getParentPersonId() {
        return (Number) getAttributeInternal(PARENTPERSONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute ParentPersonId.
     * @param value value to set the  ParentPersonId
     */
    public void setParentPersonId(Number value) {
        setAttributeInternal(PARENTPERSONID, value);
    }

    /**
     * Gets the attribute value for the calculated attribute FullNameChild.
     * @return the FullNameChild
     */
    public String getFullNameChild() {
        return (String) getAttributeInternal(FULLNAMECHILD);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute FullNameChild.
     * @param value value to set the  FullNameChild
     */
    public void setFullNameChild(String value) {
        setAttributeInternal(FULLNAMECHILD, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
